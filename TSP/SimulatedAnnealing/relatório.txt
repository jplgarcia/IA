Simulated Annealing:
	-Tem como parâmetros task (a tarefa a sendo resolvida), start_temp (temperatura inicial da solução), alpha (grau de queda de temperatura)
		isso nos permitirá alterar os parâmetros para melhorar o algoritmo.
	-Retorna best (melhor solução encontrada), best.eval (sua avaliação), start_temp, temp (temperatura onde o algoritmo terminou), alpha
		tudo isso para termos as respostas e dados da busca num lugar
	-A chance de aceitar um vizinho pior diminui a cada solução que se aceita. isso é representado pela temperatura iterada em cooling_schedule
		-cooling_schedule foi emprestado de http://www.psychicorigami.com/2007/06/28/tackling-the-travelling-salesman-problem-simmulated-annealing/
			um modelo de temperatura = alpha*tempo, onde 0 < alpha < 1, que faz uso do operador yield de python
	-Precisa de três objetos:
		-Task: Fornece exaustion_criteria, e create_initial_solution()
		-Solution: Fornece getNeighborhood()
		-Neighborhood: Fornece getRandom()
